Index: src/LoginSystem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.IOException;\r\nimport java.time.LocalDate;\r\nimport java.time.Month;\r\nimport java.util.*;\r\n\r\npublic class LoginSystem {\r\n    private HashMap<String, User> users;\r\n    private HashMap<String, String> employeeStatuses;\r\n    public LoginSystem() {\r\n        users = CSVManager.readValidUsers();\r\n        employeeStatuses = CSVManager.readEmployeeStatus();\r\n\r\n    }\r\n    /**\r\n     * Handles the login functionality and system navigation.\r\n     * <p>This method provides a login interface for different user roles (Admin, Employee, HR).\r\n     * It also allows users to simulate moving the system date forward by days, weeks, or months\r\n     * before logging in. Special functionality is triggered if the date moves to October, such as\r\n     * updating salary scales.</p>\r\n     * <h3>Features:</h3>\r\n     * <ul>\r\n     *     <li>Simulates date advancement (Day, Week, Month).</li>\r\n     *     <li>Updates salary scales in October.</li>\r\n     *     <li>Handles user login for Admins, Employees (Full-Time and Part-Time), and HR roles.</li>\r\n     *     <li>Performs role and password validation.</li>\r\n     * </ul>\r\n     * @throws IOException if an error occurs during salary scale updates or other file operations\r\n     */\r\n    public void loginFunction() {\r\n        Scanner input = new Scanner(System.in);\r\n        boolean loggedIn = false;\r\n\r\n        // Initialize the current date\r\n        LocalDate today = LocalDate.now();\r\n\r\n        SalaryScales salaryScales = new SalaryScales();\r\n\r\n        while (!loggedIn) {\r\n            // Display the current date and day of the week\r\n            System.out.println(\"-------------------------------------------\");\r\n            System.out.println(\"       Welcome to the UL System\");\r\n            System.out.println(\"       Current Date: \" + today + \" (\" + today.getDayOfWeek() + \")\");\r\n            System.out.println(\"-------------------------------------------\");\r\n            System.out.println(\"Enter D)ay, W)eek, or M)onth to move forward or press Enter to proceed with login:\");\r\n\r\n            // Get user input\r\n            String command = input.nextLine().trim();\r\n\r\n            if (command.equalsIgnoreCase(\"D\") || command.equalsIgnoreCase(\"D)ay\")) {\r\n                // Move forward by 1 day\r\n                today = today.plusDays(1);\r\n            } else if (command.equalsIgnoreCase(\"W\") || command.equalsIgnoreCase(\"W)eek\")) {\r\n                // Move forward by 1 week\r\n                today = today.plusWeeks(1);\r\n            } else if (command.equalsIgnoreCase(\"M\") || command.equalsIgnoreCase(\"M)onth\")) {\r\n                // Move forward by 1 month\r\n                today = today.plusMonths(1);\r\n\r\n                // Check if it's October\r\n                if (today.getMonth() == Month.OCTOBER) {\r\n                    System.out.println(\"It's October! Updating everyone's salary scale...\");\r\n                    salaryScales.updateSalaryScales();\r\n                }\r\n            } else {\r\n                // Proceed with login\r\n                System.out.println(\"Select your role: A)dmin E)mployee H)R\");\r\n                String roleCommand = input.nextLine().trim();\r\n                System.out.println(\"Enter your username:\");\r\n                String usernameIn = input.nextLine().trim();\r\n                System.out.println(\"Enter your password:\");\r\n                String passwordIn = input.nextLine().trim();\r\n\r\n                if (users.containsKey(usernameIn)) {\r\n                    User validUser = users.get(usernameIn);\r\n                    if (validUser.getPassword().equals(passwordIn)) {\r\n                        if (roleCommand.equalsIgnoreCase(\"A\") && validUser instanceof Admin) {\r\n                            System.out.println(\"Login successful as Admin.\");\r\n                            this.adminLoggedIn((Admin) validUser);\r\n                            loggedIn = true;\r\n                        }\r\n\r\n                        else if (roleCommand.equalsIgnoreCase(\"E\") && validUser instanceof Employee) {\r\n                            String status = employeeStatuses.getOrDefault(usernameIn, \"Unknown\");\r\n                            if (status.equalsIgnoreCase(\"Full-Time\")) {\r\n                                System.out.println(\"Login successful as Full-Time Employee.\");\r\n                                Employee employee = CSVManager.getEmployeeByUsername(validUser.getUsername());\r\n                                this.FulltimeemployeeLoggedIn((Employee) employee);\r\n                                loggedIn = true;\r\n                            } else if (status.equalsIgnoreCase(\"Part-Time\")) {\r\n                                System.out.println(\"Login successful as Part-Time Employee.\");\r\n                                Employee employee = CSVManager.getEmployeeByUsername(validUser.getUsername());\r\n                                this.ParttimeemployeeLoggedIn((Employee) employee);\r\n                                loggedIn = true;\r\n                            } else {\r\n                                System.out.println(\"Unknown Employee Status. Please contact Admin.\");\r\n                            }\r\n                        }\r\n\r\n\r\n                            else if (roleCommand.equalsIgnoreCase(\"H\") && validUser instanceof HR) {\r\n                            System.out.println(\"Login successful as HR.\");\r\n                            this.hrLoggedIn((HR) validUser);\r\n                            loggedIn = true;\r\n                        } else {\r\n                            System.out.println(\"Incorrect User Type. Please Try Again!\");\r\n                        }\r\n                    } else {\r\n                        System.out.println(\"Incorrect password. Please Try Again!\");\r\n                    }\r\n                } else {\r\n                    System.out.println(\"Incorrect username. Please Try Again!\");\r\n                }\r\n            }\r\n        }\r\n        input.close();\r\n    }\r\n    /**\r\n     * Handles the admin login process and presents the admin menu options.\r\n     *\r\n     * <p>This method displays the admin menu and allows the admin to perform specific actions:</p>\r\n     * <ul>\r\n     *     <li>Create a new employee by invoking the {@code createEmployee} method with the file {@code FullTimeSalaryScales.csv}.</li>\r\n     *     <li>Log out by selecting the corresponding menu option.</li>\r\n     * </ul>\r\n     *\r\n     * @param adminUser the {@link Admin} object representing the logged-in admin\r\n     */\r\n    public void adminLoggedIn(Admin adminUser){\r\n\r\n        System.out.println(\"-------------------------------------------\");\r\n        System.out.println(\"        Welcome to the UL Admin Menu       \");\r\n        System.out.println(\"-------------------------------------------\");\r\n        System.out.println(\"Please select what you would like to do:\");\r\n        System.out.println(\"C)reate a new employee\");\r\n        System.out.println(\"L)og Out\");\r\n\r\n        Scanner input = new Scanner(System.in);\r\n        String command = input.nextLine().trim();\r\n\r\n        if(command.equalsIgnoreCase(\"C\")){\r\n            adminUser.createEmployee(\"FullTimeSalaryScales.csv\" );\r\n        }else if(command.equalsIgnoreCase(\"L\")){\r\n\r\n        }\r\n    }\r\n    /**\r\n     * Displays the HR menu for the logged-in HR user and handles user actions.\r\n     *\r\n     * <p>This method provides a text-based menu interface for an HR user,\r\n     * allowing them to select options to promote an employee or log out.\r\n     * Invalid inputs are handled gracefully by prompting the user to try again.\r\n     * The menu continues to display until the user chooses to log out.</p>\r\n     *\r\n     * @param hrUser the logged-in HR user who will interact with the menu\r\n     */\r\n    public void hrLoggedIn(HR hrUser){\r\n\r\n        System.out.println(\"-------------------------------------------\");\r\n        System.out.println(\"        Welcome to the UL HR Menu       \");\r\n        System.out.println(\"-------------------------------------------\");\r\n        System.out.println(\"Please select what you would like to do:\");\r\n        System.out.println(\"P)romote an employee\");\r\n        System.out.println(\"L)og Out\");\r\n\r\n        Scanner input = new Scanner(System.in);\r\n        String command = input.nextLine().trim();\r\n\r\n        if(command.equalsIgnoreCase(\"P\")){\r\n            hrUser.promoteEmployee();\r\n        }else if(command.equalsIgnoreCase(\"L\")){\r\n\r\n        }\r\n    }\r\n    /**\r\n     * Handles the menu and actions for a logged-in full-time employee.\r\n     *\r\n     * <p>This method displays the menu for a full-time employee, including options to:\r\n     * <ul>\r\n     *     <li>Check for and respond to pending promotions</li>\r\n     *     <li>View payslips</li>\r\n     *     <li>Log out</li>\r\n     * </ul>\r\n     * </p>\r\n     *\r\n     * <p>If the employee has a pending promotion, they can accept or reject it.\r\n     * Additional functionality such as viewing payslips can be implemented as needed.</p>\r\n     *\r\n     * @param employee the full-time employee who has logged in\r\n     */\r\n    public void FulltimeemployeeLoggedIn(Employee employee) {\r\n        System.out.println(\"----------------------------------------------\");\r\n        System.out.println(\"  Welcome to the Full-time Employee Menu\"      );\r\n        System.out.println(\"----------------------------------------------\");\r\n\r\n        // Fetch updated employee details from EmployeeInfo.csv\r\n        Employee updatedEmployee = CSVManager.getEmployeeByUsername(employee.getUsername());\r\n\r\n        if (updatedEmployee != null && updatedEmployee.hasPendingPromotionFlag()) {\r\n            System.out.println(\"You have a pending promotion to: \" + updatedEmployee.getJobTitle() + \" (Scale Point: \" + updatedEmployee.getScalePoint() + \")\");\r\n            System.out.println(\"Do you want to accept or reject the promotion?\");\r\n            System.out.println(\"A) Accept    R) Reject\");\r\n\r\n            Scanner input = new Scanner(System.in);\r\n            String command = input.nextLine().trim();\r\n\r\n            if (command.equalsIgnoreCase(\"A\")) {\r\n                updatedEmployee.confirmPromotion(); // Accept promotion\r\n            } else if (command.equalsIgnoreCase(\"R\")) {\r\n                updatedEmployee.rejectPromotion(); // Reject promotion\r\n            } else {\r\n                System.out.println(\"Invalid input. No action taken.\");\r\n            }\r\n        }\r\n\r\n        System.out.println(\"Please select an option:\");\r\n        System.out.println(\"V) View Payslips\");\r\n        System.out.println(\"L) Log Out\");\r\n\r\n        Scanner input = new Scanner(System.in);\r\n        String command = input.nextLine().trim();\r\n\r\n        if (command.equalsIgnoreCase(\"V\")) {\r\n            employee.viewPayslips();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Handles the menu and actions for a logged-in part-time employee.\r\n     *\r\n     * <p>This method displays the menu for a part-time employee, including options to:\r\n     * <ul>\r\n     *     <li>Check for and respond to pending promotions</li>\r\n     *     <li>Submit a pay claim</li>\r\n     *     <li>View payslips</li>\r\n     *     <li>Log out</li>\r\n     * </ul>\r\n     * </p>\r\n     *\r\n     * <p>If the employee has a pending promotion, they can accept or reject it.\r\n     * The method also facilitates the submission of a pay claim by integrating with\r\n     * external readers and writers for employee information and salary scales.</p>\r\n     *\r\n     * @param employee the part-time employee who has logged in\r\n     */\r\n    public void ParttimeemployeeLoggedIn(Employee employee) {\r\n        System.out.println(\"----------------------------------------------\");\r\n        System.out.println(\"   Welcome to the Part-time Employee Menu     \");\r\n        System.out.println(\"----------------------------------------------\");\r\n\r\n        // Fetch updated employee details from EmployeeInfo.csv\r\n        Employee updatedEmployee = CSVManager.getEmployeeByUsername(employee.getUsername());\r\n\r\n        if (updatedEmployee != null && updatedEmployee.hasPendingPromotionFlag()) {\r\n            System.out.println(\"You have a pending promotion to: \" + updatedEmployee.getJobTitle() + \" (Scale Point: \" + updatedEmployee.getScalePoint() + \")\");\r\n            System.out.println(\"Do you want to accept or reject the promotion?\");\r\n            System.out.println(\"A) Accept    R) Reject\");\r\n\r\n            Scanner input = new Scanner(System.in);\r\n            String promotionCommand = input.nextLine().trim();\r\n\r\n            if (promotionCommand.equalsIgnoreCase(\"A\")) {\r\n                updatedEmployee.confirmPromotion(); // Accept promotion\r\n            } else if (promotionCommand.equalsIgnoreCase(\"R\")) {\r\n                updatedEmployee.rejectPromotion(); // Reject promotion\r\n            } else {\r\n                System.out.println(\"Invalid input. No action taken.\");\r\n            }\r\n        }\r\n\r\n        System.out.println(\"Please select an option:\");\r\n        System.out.println(\"S) Submit Pay Claim\");\r\n        System.out.println(\"V) View Payslips\");\r\n        System.out.println(\"L) Log Out\");\r\n\r\n        Scanner input = new Scanner(System.in);\r\n        String command = input.nextLine().trim();\r\n\r\n        if (command.equalsIgnoreCase(\"S\")) {\r\n            // Initialize dependencies\r\n            String employeeInfoFile = \"EmployeeInfo.csv\";\r\n            String salaryScalesFile = \"FulltimeSalaryScales.csv\";\r\n\r\n            try {\r\n                EmployeeInfoReader employeeReader = new EmployeeInfoReader(employeeInfoFile);\r\n                FulltimeSalaryScalesReader salaryReader = new FulltimeSalaryScalesReader(salaryScalesFile);\r\n                PaySlipWriter writer = new PaySlipWriter(\"PayClaim.csv\");\r\n\r\n                // Initialize PaySlipCalculator\r\n                PaySlipCalculator calculator = new PaySlipCalculator(salaryReader, writer);\r\n\r\n                // Call the submit pay claim method\r\n                calculator.submitPayClaim(employee.getUsername(), employeeReader);\r\n            } catch (IOException e) {\r\n                System.err.println(\"Error during pay claim submission: \" + e.getMessage());\r\n            }\r\n        } else if (command.equalsIgnoreCase(\"V\")) {\r\n            // View Payslips logic (not implemented yet)\r\n            System.out.println(\"Feature not implemented yet.\");\r\n        } else if (command.equalsIgnoreCase(\"L\")) {\r\n            System.out.println(\"Logging out...\");\r\n        } else {\r\n            System.out.println(\"Invalid option. Please try again.\");\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/LoginSystem.java b/src/LoginSystem.java
--- a/src/LoginSystem.java	(revision e5408831023c184d3ced2740009a286a542e23ed)
+++ b/src/LoginSystem.java	(date 1733060912977)
@@ -295,8 +295,7 @@
                 System.err.println("Error during pay claim submission: " + e.getMessage());
             }
         } else if (command.equalsIgnoreCase("V")) {
-            // View Payslips logic (not implemented yet)
-            System.out.println("Feature not implemented yet.");
+           employee.viewPayslips();
         } else if (command.equalsIgnoreCase("L")) {
             System.out.println("Logging out...");
         } else {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d5f87640-7b81-40cf-8f39-405108a9a8d3\" name=\"Changes\" comment=\"Got view payslips back lol\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/LoginSystem.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/LoginSystem.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;BriEnright&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/IljaBSK/OOP_ProjectV2.git&quot;,\r\n    &quot;accountId&quot;: &quot;a8d251c6-9856-4993-b866-d0e541dc1921&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2pRowOIHG48ME6Q9TSrT5Pqh78W\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;Application.MenuSimulation.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Project/OOP_ProjectV2&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\iljab\\My Documents\\OOPProjectV2\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"MenuSimulation\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MenuSimulation\" />\r\n      <module name=\"OOPProjectV2\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.MenuSimulation\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d5f87640-7b81-40cf-8f39-405108a9a8d3\" name=\"Changes\" comment=\"\" />\r\n      <created>1732738491383</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1732738491383</updated>\r\n      <workItem from=\"1732738492402\" duration=\"1190000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"TESTING IF ITS COMMITING\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733012782840</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733012782840</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"TESTING IF ITS COMMITING\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733012916489</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733012916489</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"IT WORKED : TESTING ONE MORE TIME TO MAKE SURE ITS WORKING\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733013536888</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733013536888</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"IT WORKED : TESTING ONE MORE TIME TO MAKE SURE ITS WORKING\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733013698716</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733013698716</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"IT WORKED : TESTING ONE MORE TIME TO MAKE SURE ITS WORKING\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733014348452</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733014348452</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Got view payslips back lol\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733059607093</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733059607093</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Got view payslips back lol\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733059801347</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733059801347</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnknownFeatures\">\r\n    <option featureType=\"com.intellij.fileTypeFactory\" implementationName=\"*.csv\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"TESTING IF ITS COMMITING\" />\r\n    <MESSAGE value=\"IT WORKED : TESTING ONE MORE TIME TO MAKE SURE ITS WORKING\" />\r\n    <MESSAGE value=\"Got view payslips back lol\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Got view payslips back lol\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e5408831023c184d3ced2740009a286a542e23ed)
+++ b/.idea/workspace.xml	(date 1733061137149)
@@ -4,9 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d5f87640-7b81-40cf-8f39-405108a9a8d3" name="Changes" comment="Got view payslips back lol">
-      <change beforePath="$PROJECT_DIR$/src/LoginSystem.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/LoginSystem.java" afterDir="false" />
-    </list>
+    <list default="true" id="d5f87640-7b81-40cf-8f39-405108a9a8d3" name="Changes" comment="Hope this works" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -151,7 +149,15 @@
       <option name="project" value="LOCAL" />
       <updated>1733059801347</updated>
     </task>
-    <option name="localTasksCounter" value="8" />
+    <task id="LOCAL-00008" summary="Hope this works">
+      <option name="closed" value="true" />
+      <created>1733060091576</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1733060091576</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -164,6 +170,7 @@
     <MESSAGE value="TESTING IF ITS COMMITING" />
     <MESSAGE value="IT WORKED : TESTING ONE MORE TIME TO MAKE SURE ITS WORKING" />
     <MESSAGE value="Got view payslips back lol" />
-    <option name="LAST_COMMIT_MESSAGE" value="Got view payslips back lol" />
+    <MESSAGE value="Hope this works" />
+    <option name="LAST_COMMIT_MESSAGE" value="Hope this works" />
   </component>
 </project>
\ No newline at end of file
